[["/home/project/components/CodeSnippet.vue","<template>\n  <div class=\"relative h-full\">\n    <div class=\"absolute inset-y-0 left-0 w-1 bg-red-500\"></div>\n    <div class=\"absolute inset-y-0 right-0 w-1 bg-green-500\"></div>\n    <div\n      class=\"bg-gray-800 p-4 rounded-lg text-white overflow-x-auto h-full mx-2\"\n      :style=\"{ transform: `translateX(${dragOffset}px)` }\"\n      @mousedown=\"startDrag\"\n      @touchstart=\"startDrag\"\n    >\n      <pre><code>{{ snippet.code }}</code></pre>\n      <div class=\"mt-4 flex justify-between\">\n        <button @click=\"emitSwipe(true)\" class=\"bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded\">\n          Vulnerable\n        </button>\n        <button @click=\"emitSwipe(false)\" class=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded\">\n          Not Vulnerable\n        </button>\n      </div>\n      <div class=\"mt-4 text-center\" v-if=\"isDragging\">\n        {{ dragDirection === 'left' ? 'Vulnerable' : dragDirection === 'right' ? 'Not Vulnerable' : '' }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\nconst props = defineProps({\n  snippet: {\n    type: Object,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['swipe']);\n\nconst dragOffset = ref(0);\nconst isDragging = ref(false);\nconst dragStartX = ref(0);\n\nconst dragDirection = computed(() => {\n  if (dragOffset.value < -50) return 'left';\n  if (dragOffset.value > 50) return 'right';\n  return '';\n});\n\nfunction startDrag(event) {\n  isDragging.value = true;\n  dragStartX.value = event.type === 'mousedown' ? event.clientX : event.touches[0].clientX;\n  document.addEventListener('mousemove', drag);\n  document.addEventListener('touchmove', drag);\n  document.addEventListener('mouseup', endDrag);\n  document.addEventListener('touchend', endDrag);\n}\n\nfunction drag(event) {\n  if (!isDragging.value) return;\n  const currentX = event.type === 'mousemove' ? event.clientX : event.touches[0].clientX;\n  dragOffset.value = currentX - dragStartX.value;\n}\n\nfunction endDrag() {\n  isDragging.value = false;\n  document.removeEventListener('mousemove', drag);\n  document.removeEventListener('touchmove', drag);\n  document.removeEventListener('mouseup', endDrag);\n  document.removeEventListener('touchend', endDrag);\n\n  if (dragOffset.value < -100) {\n    emitSwipe(true);\n  } else if (dragOffset.value > 100) {\n    emitSwipe(false);\n  }\n\n  dragOffset.value = 0;\n}\n\nfunction emitSwipe(isVulnerable) {\n  emit('swipe', isVulnerable);\n}\n</script>\n\n<style scoped>\n.bg-gray-800 {\n  transition: transform 0.3s ease-out;\n}\n</style>"]]